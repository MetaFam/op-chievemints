{"version":3,"file":"MaxForm-b0eaf7ff.js","sources":["../../../../node_modules/react-spinners/esm/helpers/colors.js","../../../../node_modules/react-spinners/esm/BarLoader.js","../../../../node_modules/react-spinners/esm/HashLoader.js","../../src/components/OptionsForm.tsx","../../src/components/URIForm.tsx","../../src/components/NFTForm.tsx","../../src/components/JSONForm.tsx","../../src/components/MaxForm.tsx"],"sourcesContent":["var BasicColors;\n(function (BasicColors) {\n    BasicColors[\"maroon\"] = \"#800000\";\n    BasicColors[\"red\"] = \"#FF0000\";\n    BasicColors[\"orange\"] = \"#FFA500\";\n    BasicColors[\"yellow\"] = \"#FFFF00\";\n    BasicColors[\"olive\"] = \"#808000\";\n    BasicColors[\"green\"] = \"#008000\";\n    BasicColors[\"purple\"] = \"#800080\";\n    BasicColors[\"fuchsia\"] = \"#FF00FF\";\n    BasicColors[\"lime\"] = \"#00FF00\";\n    BasicColors[\"teal\"] = \"#008080\";\n    BasicColors[\"aqua\"] = \"#00FFFF\";\n    BasicColors[\"blue\"] = \"#0000FF\";\n    BasicColors[\"navy\"] = \"#000080\";\n    BasicColors[\"black\"] = \"#000000\";\n    BasicColors[\"gray\"] = \"#808080\";\n    BasicColors[\"silver\"] = \"#C0C0C0\";\n    BasicColors[\"white\"] = \"#FFFFFF\";\n})(BasicColors || (BasicColors = {}));\nexport var calculateRgba = function (color, opacity) {\n    if (Object.keys(BasicColors).includes(color)) {\n        color = BasicColors[color];\n    }\n    if (color[0] === \"#\") {\n        color = color.slice(1);\n    }\n    if (color.length === 3) {\n        var res_1 = \"\";\n        color.split(\"\").forEach(function (c) {\n            res_1 += c;\n            res_1 += c;\n        });\n        color = res_1;\n    }\n    var rgbValues = (color.match(/.{2}/g) || []).map(function (hex) { return parseInt(hex, 16); }).join(\", \");\n    return \"rgba(\".concat(rgbValues, \", \").concat(opacity, \")\");\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nimport { calculateRgba } from \"./helpers/colors\";\nvar long = createAnimation(\"BarLoader\", \"0% {left: -35%;right: 100%} 60% {left: 100%;right: -90%} 100% {left: 100%;right: -90%}\", \"long\");\nvar short = createAnimation(\"BarLoader\", \"0% {left: -200%;right: 100%} 60% {left: 107%;right: -8%} 100% {left: 107%;right: -8%}\", \"short\");\nfunction BarLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.height, height = _f === void 0 ? 4 : _f, _g = _a.width, width = _g === void 0 ? 100 : _g, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"height\", \"width\"]);\n    var wrapper = __assign({ display: \"inherit\", position: \"relative\", width: cssValue(width), height: cssValue(height), overflow: \"hidden\", backgroundColor: calculateRgba(color, 0.2), backgroundClip: \"padding-box\" }, cssOverride);\n    var style = function (i) {\n        return {\n            position: \"absolute\",\n            height: cssValue(height),\n            overflow: \"hidden\",\n            backgroundColor: color,\n            backgroundClip: \"padding-box\",\n            display: \"block\",\n            borderRadius: 2,\n            willChange: \"left, right\",\n            animationFillMode: \"forwards\",\n            animation: \"\".concat(i === 1 ? long : short, \" \").concat(2.1 / speedMultiplier, \"s \").concat(i === 2 ? \"\".concat(1.15 / speedMultiplier, \"s\") : \"\", \" \").concat(i === 1 ? \"cubic-bezier(0.65, 0.815, 0.735, 0.395)\" : \"cubic-bezier(0.165, 0.84, 0.44, 1)\", \" infinite\"),\n        };\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: style(1) }),\n        React.createElement(\"span\", { style: style(2) })));\n}\nexport default BarLoader;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { calculateRgba } from \"./helpers/colors\";\nimport { parseLengthAndUnit, cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nfunction HashLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 50 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var _g = parseLengthAndUnit(size), value = _g.value, unit = _g.unit;\n    var wrapper = __assign({ display: \"inherit\", position: \"relative\", width: cssValue(size), height: cssValue(size), transform: \"rotate(165deg)\" }, cssOverride);\n    var thickness = value / 5;\n    var lat = (value - thickness) / 2;\n    var offset = lat - thickness;\n    var colorValue = calculateRgba(color, 0.75);\n    var before = createAnimation(\"HashLoader\", \"0% {width: \".concat(thickness, \"px; box-shadow: \").concat(lat, \"px \").concat(-offset, \"px \").concat(colorValue, \", \").concat(-lat, \"px \").concat(offset, \"px \").concat(colorValue, \"}\\n    35% {width: \").concat(cssValue(size), \"; box-shadow: 0 \").concat(-offset, \"px \").concat(colorValue, \", 0 \").concat(offset, \"px \").concat(colorValue, \"}\\n    70% {width: \").concat(thickness, \"px; box-shadow: \").concat(-lat, \"px \").concat(-offset, \"px \").concat(colorValue, \", \").concat(lat, \"px \").concat(offset, \"px \").concat(colorValue, \"}\\n    100% {box-shadow: \").concat(lat, \"px \").concat(-offset, \"px \").concat(colorValue, \", \").concat(-lat, \"px \").concat(offset, \"px \").concat(colorValue, \"}\"), \"before\");\n    var after = createAnimation(\"HashLoader\", \"0% {height: \".concat(thickness, \"px; box-shadow: \").concat(offset, \"px \").concat(lat, \"px \").concat(color, \", \").concat(-offset, \"px \").concat(-lat, \"px \").concat(color, \"}\\n    35% {height: \").concat(cssValue(size), \"; box-shadow: \").concat(offset, \"px 0 \").concat(color, \", \").concat(-offset, \"px 0 \").concat(color, \"}\\n    70% {height: \").concat(thickness, \"px; box-shadow: \").concat(offset, \"px \").concat(-lat, \"px \").concat(color, \", \").concat(-offset, \"px \").concat(lat, \"px \").concat(color, \"}\\n    100% {box-shadow: \").concat(offset, \"px \").concat(lat, \"px \").concat(color, \", \").concat(-offset, \"px \").concat(-lat, \"px \").concat(color, \"}\"), \"after\");\n    var style = function (i) {\n        return {\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            display: \"block\",\n            width: \"\".concat(value / 5).concat(unit),\n            height: \"\".concat(value / 5).concat(unit),\n            borderRadius: \"\".concat(value / 10).concat(unit),\n            transform: \"translate(-50%, -50%)\",\n            animationFillMode: \"none\",\n            animation: \"\".concat(i === 1 ? before : after, \" \").concat(2 / speedMultiplier, \"s infinite\"),\n        };\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: style(1) }),\n        React.createElement(\"span\", { style: style(2) })));\n}\nexport default HashLoader;\n","import {\n  URIForm, JSONForm, NFTForm, MaxForm, SubmitButton,\n} from '@/components'\nimport {\n  ipfsify, isSet, isEmpty, regexify, extractMessage,\n} from '@/lib/helpers'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { useWeb3 } from '@/lib/hooks'\nimport { useForm } from 'react-hook-form'\nimport JSON5 from 'json5'\nimport {\n  ERC1155Metadata, FormValues, Maybe, OpenSeaAttribute, Attribute,\n} from '@/lib/types'\nimport { useNavigate } from 'react-router-dom'\nimport { useConfig } from '@/config'\nimport { toast } from 'react-toastify'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\nimport { createPortal } from 'react-dom'\nimport { Values } from '@/lib/types'\nimport os from '../styles/OptionsForm.module.css'\n\nexport const OptionsForm: React.FC<{\n  purpose?: 'create' | 'update'\n  tokenId?: string\n  metadata?: Maybe<ERC1155Metadata>\n  metaURI?: string\n}> = ({\n  purpose = 'create',\n  tokenId,\n  metadata: incomingData,\n  metaURI: incomingURI,\n}) => {\n    const FIELD_FORM = 0\n    const URI_FORM = 1\n    const JSON5_FORM = 2\n    const { rwContract, contractClient } = useWeb3()\n    const navigate = useNavigate()\n    const {\n      register, handleSubmit, watch, setValue: setValue,\n      formState: { isSubmitting: processing },\n    } = useForm<FormValues>({\n      defaultValues: {\n        uri: incomingURI,\n      },\n    })\n    const [metadata, setMetadata] = (\n      useState<Maybe<ERC1155Metadata>>(incomingData ?? {})\n    )\n    const [tab, setTab] = useState(FIELD_FORM)\n    const { storage, Settings, openSettings } = useConfig()\n    const values = watch()\n    const json5 = watch('json5')\n    const uri = watch('uri')\n\n    const buildMeta = useCallback(async ({\n      data, ipfs = true,\n    }: { data: FormValues, ipfs?: boolean }) => {\n      const wrapIPFS = async (filesOrURL: unknown) => {\n        const isFile = filesOrURL instanceof File\n        const isString = typeof filesOrURL === 'string'\n        if (isFile || isString) {\n          if (ipfs) {\n            return await ipfsify({ filesOrURL, storage })\n          } else {\n            return (\n              isFile ? (\n                URL.createObjectURL(filesOrURL)\n              ) : (\n                filesOrURL\n              )\n            )\n          }\n        } else {\n          throw new Error(`Unknown Media Type: ${typeof image}`)\n        }\n      }\n\n      const {\n        name, description, homepage, color,\n        image, animation, attributes,\n      } = data\n\n      const metadata: ERC1155Metadata = {\n        name: isSet(name) ? name : '𝙐𝙣𝙩𝙞𝙩𝙡𝙚𝙙',\n        decimals: 0,\n      }\n\n      if (isSet(description)) {\n        metadata.description = description\n      }\n\n      if (isSet(homepage)) {\n        metadata.external_url = homepage\n      }\n\n      if (image) {\n        metadata.image = await wrapIPFS(image)\n      }\n\n      if (animation) {\n        metadata.animation_url = await wrapIPFS(animation)\n      }\n\n      if (color?.startsWith('#')) {\n        metadata.background_color = (\n          color.substring(1).toUpperCase()\n        )\n      }\n\n      if (isSet(attributes) && !isEmpty(attributes)) {\n        metadata.attributes = (\n          attributes.map(({ name, value, type }: Attribute) => {\n            const attr: OpenSeaAttribute = {\n              trait_type: name,\n              value,\n            }\n            // including a string type causes nothing to render\n            if (type !== 'string') {\n              attr.display_type = type\n            }\n            return attr\n          })\n        )\n      }\n\n      return metadata\n    }, [storage])\n\n    const configure = useCallback(\n      async ({ metadata }: { metadata: string }) => {\n        if (!rwContract) {\n          throw new Error(\n            `Cannot connect to contract to ${purpose} metadata.`\n          )\n        }\n        if (tokenId == null) {\n          throw new Error('Token id is unset.')\n        }\n        if (metadata == null) {\n          throw new Error('metadata is unset.')\n        }\n        try {\n          const hash = await rwContract('setURI', [BigInt(tokenId), metadata]) as '0x{string}'\n          await contractClient.waitForTransactionReceipt({ hash })\n\n          if (metadata !== '') {\n            navigate(`/view/${regexify(tokenId)}`)\n          }\n        } catch (error) {\n          console.error({ error })\n          toast(extractMessage(error), { type: 'error' })\n        }\n      },\n      [rwContract, tokenId, purpose, navigate],\n    )\n\n    const submit = useCallback(async (data: FormValues) => {\n      try {\n        const name = `metadata.${(new Date()).toISOString()}.json`\n        let metadata = await (async () => {\n          switch (tab) {\n            case FIELD_FORM: {\n              const content = JSON.stringify(\n                await buildMeta({ data }), null, 2\n              )\n              return { name, content }\n            }\n            case URI_FORM: {\n              return data.uri ?? ''\n            }\n            case JSON5_FORM: {\n              if (!isSet(data.json5)) {\n                throw new Error('JSON5 isn’t set.')\n              }\n              const meta = JSON5.parse(data.json5)\n              return {\n                name,\n                content: JSON.stringify(meta, null, 2)\n              }\n            }\n            default: {\n              throw new Error(`Unknown Tab: ${tab}`)\n            }\n          }\n        })()\n\n        if (metadata == null) {\n          throw new Error(`Metadata is \\`${JSON5.stringify(metadata)}\\`.`)\n        } else if (metadata !== '') {\n          metadata = await ipfsify({ filesOrURL: metadata, storage })\n        }\n        await configure({ metadata })\n      } catch (error) {\n        console.error({ error })\n        toast(extractMessage(error))\n      }\n    }, [buildMeta, configure, storage, tab])\n\n    const changeTo = useMemo(() => ({\n      fields: async (previous: number) => {\n        let metaPromise\n        switch (previous) {\n          case URI_FORM: {\n            if (uri && uri !== '') {\n              metaPromise = (\n                fetch(uri)\n                  .then((res) => res.text())\n                  .then<ERC1155Metadata>(\n                    (txt) => JSON5.parse(txt)\n                  )\n              )\n            }\n            break\n          }\n          case JSON5_FORM: {\n            if (json5 && json5 !== '') {\n              metaPromise = Promise.resolve<ERC1155Metadata>(\n                JSON5.parse(json5)\n              )\n            }\n            break\n          }\n        }\n\n        if (metaPromise) {\n          setMetadata(null)\n          metaPromise\n            .then((meta) => {\n              const types = [\n                { image: 'image' },\n                { animation: 'animation_url' },\n              ] as const\n              for (const typeSet of types) {\n                const type = Object.keys(typeSet)[0] as keyof typeof typeSet\n                const key = typeSet[type] as Values<typeof typeSet>\n                if (\n                  typeof meta[key] === 'string'\n                  && (meta[key] as string).startsWith('blob:')\n                ) {\n                  meta[key] = values[type] as string\n                }\n              }\n              setMetadata(meta)\n            })\n        } else {\n          toast.warn('No metadata specified.')\n        }\n      },\n      uri: async (previous: number) => {\n        return previous\n      },\n      json5: async (previous: number) => {\n        let metaPromise\n        switch (previous) {\n          case FIELD_FORM: {\n            metaPromise = (\n              buildMeta({ data: values, ipfs: false })\n            )\n            break\n          }\n          case URI_FORM: {\n            if (uri && uri !== '') {\n              metaPromise = (\n                fetch(uri)\n                  .then<ERC1155Metadata>((res) => res.json())\n              )\n            }\n            break\n          }\n        }\n        if (metaPromise) {\n          setMetadata(null)\n          setMetadata(await metaPromise)\n        } else {\n          toast('No metadata found.')\n        }\n      }\n    }), [uri, json5, buildMeta, values])\n\n    const onSelect = useCallback(\n      (idx: number, previous: number) => {\n        if (idx === previous) return\n\n        let changePromise\n        switch (idx) {\n          case FIELD_FORM: {\n            changePromise = changeTo.fields(previous)\n            break\n          }\n          case URI_FORM: {\n            changePromise = changeTo.uri(previous)\n            break\n          }\n          case JSON5_FORM: {\n            changePromise = changeTo.json5(previous)\n            break\n          }\n        }\n        changePromise.then(() => setTab(idx))\n      },\n      [changeTo],\n    )\n\n    return (\n      <div id={os.form}>\n        {createPortal(\n          <Settings />, document.body,\n        )}\n        <form onSubmit={handleSubmit(submit)}>\n          <SubmitButton\n            className=\"full\"\n            {...{ purpose, processing, openSettings }}\n          />\n          <Tabs {...{ onSelect }}>\n            <TabList>\n              <Tab>Fields</Tab>\n              <Tab>URI</Tab>\n              <Tab>JSON5</Tab>\n            </TabList>\n            {[NFTForm, URIForm, JSONForm].map(\n              (Form, idx) => (\n                <TabPanel key={idx}>\n                  <Form {...{\n                    register,\n                    watch,\n                    setValue,\n                    tokenId,\n                    metadata,\n                  }} />\n                </TabPanel>\n              )\n            )}\n          </Tabs>\n          <SubmitButton\n            requireStorage={true}\n            className=\"full\"\n            {...{ purpose, processing, openSettings }}\n          />\n        </form>\n        <section id={os.maxes}>\n          <MaxForm\n            className={os.max}\n            {...{ tokenId, purpose }}\n          />\n          <MaxForm\n            perUser={true}\n            className={os.max}\n            {...{ tokenId, purpose }}\n          />\n        </section>\n      </div>\n    )\n  }\n\nexport default OptionsForm","import React from 'react'\nimport { FieldValues, UseFormRegister } from 'react-hook-form'\nimport '../styles/URIForm.css'\n\nexport const URIForm: React.FC<{\n  register: UseFormRegister<FieldValues>\n}> = ({ register }) => {\n  return (\n    <input\n      placeholder=\"Enter a URI for the token…\"\n      {...register('uri')}\n    />\n  )\n}\n","/* eslint-disable @next/next/no-img-element */\nimport { nftBase } from '@/config'\nimport {\n  httpURL, isEmpty, regexify, capitalize,\n} from '@/lib/helpers'\nimport {\n  Attribute, ERC1155Metadata, Maybe, OpenSeaAttribute,\n} from '@/lib/types'\nimport React, {\n  ChangeEvent, useCallback, useEffect, useRef, useState,\n} from 'react'\nimport Markdown from 'react-markdown'\nimport {\n  FieldValues, UseFormRegister, UseFormSetValue,\n  UseFormWatch,\n} from 'react-hook-form'\nimport { Link } from 'react-router-dom'\nimport {\n  Tab, Tabs, TabList, TabPanel,\n} from 'react-tabs'\nimport { ThreeDScene } from './ThreeDScene'\nimport fs from '../styles/NFTForm.module.css'\n\nconst AttrRow: React.FC<{\n  attributes: Array<Attribute>\n  setValue: (\n    UseFormSetValue<FieldValues>\n  )\n  index: number\n}> = ({ attributes = [], setValue: setFormValue, index }) => {\n  const { name = '', value = '', type = 'string' } = (\n    attributes[index]\n  )\n  const setter = useCallback(\n    (prop: string) => (\n      (value: string | number) => {\n        setFormValue(\n          'attributes',\n          [\n            ...attributes.slice(0, index),\n            { ...attributes[index], [prop]: value },\n            ...attributes.slice(index + 1)\n          ],\n        )\n      }\n    ), [setFormValue, index, attributes]\n  )\n  const setName = setter('name')\n  const setValue = setter('value')\n  const setType = setter('type')\n\n  return (\n    <tr>\n      <td>\n        <input\n          value={name}\n          onChange={\n            ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n              setName(value)\n            }\n          }\n        />\n      </td>\n      <td>\n        <select\n          value={type}\n          onChange={\n            ({ target: { value } }: ChangeEvent<HTMLSelectElement>) => {\n              setType(value)\n            }\n          }\n        >\n          <option value=\"string\">String</option>\n          <option value=\"date\">Date</option>\n          <option value=\"number\">Number</option>\n          <option value=\"boost_percentage\">\n            Boost Percentage\n          </option>\n          <option value=\"boost_number\">\n            Boost Number\n          </option>\n        </select>\n      </td>\n      <td>\n        {(() => {\n          switch (type) {\n            case 'date': {\n              return (\n                <input\n                  type=\"date\"\n                  value={(() => {\n                    if(!isEmpty(value)) {\n                      try {\n                        return (\n                          new Date(value)\n                          .toLocaleDateString(\n                            'sv', { timeZone: 'GMT' },\n                          )\n                        )\n                      } catch(e) {\n                        console.error(e)\n                      }\n                    }\n                    return ''\n                  })()}\n                  onChange={\n                    ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n                      setValue(new Date(value).getTime())\n                    }\n                  }\n                />\n              )\n            }\n            case 'string': {\n              return (\n                <input\n                  {...{ value }}\n                  onChange={\n                    ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n                      setValue(value)\n                    }\n                  }\n                />\n              )\n            }\n            default: {\n              return (\n                <input\n                  type=\"number\"\n                  {...{ value }}\n                  onChange={\n                    ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n                      setValue(value != null ? Number(value) : '')\n                    }\n                  }\n                />\n              )\n            }\n          }\n        })()}\n      </td>\n      <td className={fs.actions}>\n        <button\n          type=\"button\"\n          onClick={() => setFormValue(\n            'attributes',\n            [\n              ...attributes.slice(0, index + 1),\n              { name: '', value: '', type: 'string' },\n              ...attributes.slice(index + 1),\n            ]\n          )}\n        >\n          ➕\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setFormValue(\n            'attributes',\n            [\n              ...attributes.slice(0, index),\n              ...attributes.slice(index + 1),\n            ]\n          )}\n        >\n          ❌\n        </button>\n      </td>\n    </tr>\n  )\n}\n\nconst Hyperlink: React.FC<React.PropsWithChildren<{\n  href: string\n}>> = ({\n  href, children,\n}) => {\n  const external = /^(http|ip[nf]s)/.test(href)\n  return (external ? (\n    <a {...{ href }} target=\"_blank\" rel=\"noreferrer\">\n      {children}\n    </a>\n  ) : (\n    <Link {...{ to: href }}>{children}</Link>\n  ))\n}\n\nconst MediaDisplay: React.FC<{\n  content: File | string\n  name?: string\n  prop: string\n  setValue: UseFormSetValue<FieldValues>\n  accept?: string\n}> = ({\n  content, name = 'Alt', prop, setValue, accept = '*/*',\n}) => {\n  const [filename, setFilename] = (\n    useState<Maybe<string>>(null)\n  )\n  const input = useRef<HTMLInputElement>(null)\n  const [type, setType] = useState<Maybe<string>>(null)\n\n  useEffect(() => {\n    let file = (\n      (typeof content === 'string') ? content : content?.name\n    )\n    file = file?.replace(\n      /^(https?:\\/\\/[^/]+\\/|ip[nf]s:\\/\\/(.+\\/)?)/, ''\n    )\n    setFilename(file)\n\n    const ext = file?.split('.').pop()\n    let type = 'none'\n    if(['mp4', 'avif', 'webm'].includes(ext)) {\n      type = 'video'\n    } else if(['mp3', 'wav', 'ogg', 'flac'].includes(ext)) {\n      type = 'audio'\n    } else if(['gltf', 'glb'].includes(ext)) {\n      type = 'model'\n    } else if(file != null) {\n      type = 'image'\n    }\n    setType(type)\n  }, [content])\n\n  const set = ({ target: { files } }: (\n    { target: { files: Maybe<FileList> } }\n  )) => {\n    if(files.length >= 1 && files[0]) {\n      setValue(prop, files[0])\n      setFilename(files[0].name)\n    }\n  }\n\n  const remove = (evt: React.MouseEvent) => {\n    setValue(prop, undefined)\n    setFilename(null)\n    evt.preventDefault()\n  }\n\n  return (\n    <label className={fs.media}>\n      <div className={fs.selector}>\n        <h3>{capitalize(prop)}</h3>\n        <input\n          type=\"file\"\n          onChange={set}\n          ref={input}\n          {...{ accept }}\n        />\n        {filename && <h4>{filename}</h4>}\n        {!content &&(\n          <button\n            type=\"button\"\n            onClick={() => input.current?.click()}\n          >\n            Set\n          </button>\n          )}\n      </div>\n      {content && (\n        <div className={fs.content}>\n          {(() => {\n            const url = (\n              (content instanceof File) ? (\n                URL.createObjectURL(content)\n              ) : (\n                httpURL(content)\n              )\n            )\n            switch(type) {\n              case 'none': {\n                return null\n              }\n              case 'video': {\n                return <video><source src={url}/></video>\n              }\n              case 'audio': {\n                return <audio><source src={url}/></audio>\n              }\n              case 'model': {\n                return (\n                  <ThreeDScene\n                    className={fs.model}\n                    model={url}\n                  />\n                )\n              }\n              default: {\n                return <img alt={name} src={url}/>\n              }\n            }\n          })()}\n          <button type=\"button\" onClick={remove}>❌</button>\n        </div>\n      )}\n    </label>\n  )\n}\n\nexport const NFTForm: React.FC<{\n  purpose?: 'create' | 'update'\n  register: UseFormRegister<FieldValues>\n  watch: UseFormWatch<FieldValues>\n  setValue: UseFormSetValue<FieldValues>\n  tokenId?: string\n  metadata?: Maybe<ERC1155Metadata>\n}> = ({\n  // purpose = 'create',\n  register,\n  watch,\n  setValue,\n  tokenId = '𝘜𝘯𝘬𝘯𝘰𝘸𝘯',\n  metadata,\n}) => {\n  const {\n    homepage, description, color, image,\n    attributes, animation, name,\n  } = watch()\n  // const [wearables, setWearables] = useState({})\n\n  useEffect(() => {\n    if (metadata) {\n      Object.entries({\n        name: null, description: null, image: null,\n        external_url: 'homepage',\n        animation_url: 'animation',\n      })\n      .forEach(([prop, name]) => {\n        setValue(name ?? prop, metadata[prop])\n      })\n\n      const { attributes: attrs } = metadata\n      if(!isEmpty(attrs)) {\n        setValue(\n          'attributes',\n          ((attrs ?? []).map(\n            ({\n              trait_type: name,\n              value,\n              display_type: type = 'string',\n            }: OpenSeaAttribute) => (\n              { name, value, type }\n            )\n          ))\n        )\n      }\n\n      // setWearables(metadata.properties?.wearables ?? {})\n\n      const bg = metadata.background_color\n      if(bg && !isEmpty(bg)) {\n        setValue('color', `#${bg}`)\n      }\n    }\n  }, [metadata, setValue])\n\n  useEffect(() => {\n    if(\n      !homepage\n      || isEmpty(homepage)\n      || homepage.endsWith('𝘜𝘯𝘬𝘯𝘰𝘸𝘯')\n    ) {\n      setValue(\n        'homepage',\n        `${nftBase}/${regexify(tokenId)}`\n      )\n    }\n  }, [homepage, setValue, tokenId])\n\n  useEffect(() => {\n    if (window.location.hash) {\n      const elem = document.getElementById(\n        window.location.hash.substring(1)\n      )\n      window.scroll({\n        top: (elem?.offsetTop ?? 0) - 120,\n        behavior: 'smooth',\n      })\n    }\n  }, [])\n\n  const addRow = () => {\n    setValue('attributes', [...(attributes ?? []), {}])\n  }\n\n  return (\n    <ul>\n      <li id={fs.name}>\n        <label>\n          <h3>Name</h3>\n          <input {...register('name')}/>\n        </label>\n      </li>\n      <li id={fs.image} style={{ '--img-bg': color }}>\n        <MediaDisplay\n          content={image}\n          prop=\"image\"\n          accept=\"image/*\"\n          {...{ name, setValue }}\n        />\n      </li>\n      <li id={fs.background}>\n        <label>\n          <h3>Background</h3>\n          <input\n            type=\"color\"\n            {...register('color')}\n          />\n        </label>\n      </li>\n      <li id={fs.homepage}>\n        <label>\n          <h3>Homepage</h3>\n          <input {...register('homepage')}/>\n        </label>\n        {homepage?.length > 0 && (\n          <Hyperlink href={homepage}>\n            🡽\n          </Hyperlink>\n        )}\n      </li>\n      <li id={fs.description}>\n        <label>\n          <h3>Description</h3>\n          <Tabs>\n            <TabList>\n              <Tab>Markdown</Tab>\n              <Tab>Preview</Tab>\n            </TabList>\n            <TabPanel>\n              <textarea\n                placeholder=\"Enter a markdown formatted description.\"\n                {...register('description')}\n              />\n            </TabPanel>\n            <TabPanel>\n              <Markdown>\n                {description}\n              </Markdown>\n            </TabPanel>\n          </Tabs>\n        </label>\n      </li>\n      <li id={fs.animation}>\n        <MediaDisplay\n          content={animation}\n          prop=\"animation\"\n          accept=\"model/gltf+json,model/gltf-binary,video/*,.gltf,.glb\"\n          {...{ name, setValue }}\n        />\n      </li>\n      <li id={fs.attributes}>\n        <label>\n          <h3>Attributes</h3>\n          <button type=\"button\" onClick={addRow}>\n            ➕\n          </button>\n        </label>\n        {attributes?.length > 0 && (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Value</th>\n                <th/>\n              </tr>\n            </thead>\n            <tbody>\n              {attributes.map((_: Attribute, index: number) => (\n                <AttrRow\n                  key={index}\n                  {...{\n                    attributes, setValue, index,\n                  }}\n                />\n              ))}\n            </tbody>\n          </table>\n        )}\n      </li>\n    </ul>\n  )\n}\n\nexport default NFTForm","import React, { useEffect } from 'react'\nimport { FieldValues, UseFormRegister } from 'react-hook-form'\nimport JSON5 from 'json5'\nimport { ERC1155Metadata } from '@/lib/types'\nimport { HashLoader } from 'react-spinners'\nimport jf from '../styles/JSONForm.module.css'\n\nexport const JSONForm: React.FC<{\n  register: UseFormRegister<FieldValues>\n  metadata: ERC1155Metadata\n  setValue: (name: string, value: string) => void\n}> = ({\n  register, metadata, setValue\n}) => {\n  useEffect(() => {\n    if(metadata) {\n      setValue('json5', JSON5.stringify(metadata, null, 2))\n    }\n  }, [metadata, setValue])\n\n  return (\n    metadata == null ? (\n      <section id={jf.loading}>\n        <HashLoader color=\"#EB6300\"/>\n        <p>Fetching metadata…</p>\n      </section>\n    ) : (\n      <textarea\n        placeholder=\"Enter JSON5 token metadata…\"\n        {...register('json5')}\n      />\n    )\n  )\n}\n\nexport default JSONForm","import { useWeb3 } from '@/lib/hooks'\nimport { Maybe } from '@/lib/types'\nimport React, {\n  ChangeEvent, FormEvent, useCallback, useEffect, useState\n} from 'react'\nimport { SubmitButton } from './SubmitButton'\nimport { extractMessage } from '@/lib/helpers'\nimport { BarLoader } from 'react-spinners'\nimport { toast } from 'react-toastify'\n\ntype MaxFormProps = {\n  tokenId?: string\n  perUser?: boolean\n  purpose: string\n} & React.HTMLProps<HTMLFormElement>\n\n\nexport const MaxForm = (\n  { tokenId, purpose = 'create', perUser = false, ...props }:\n  MaxFormProps\n) => {\n  const [max, setMax] = useState<Maybe<string>>(null)\n  const [processing, setProcessing] = useState(false)\n  const { roContract, rwContract, contractClient } = useWeb3()\n\n  useEffect(() => {\n    const load = async () => {\n      if(roContract && tokenId) {\n        if(perUser){\n          setMax(await roContract('getPerUserMax', [BigInt(tokenId)]) as string)\n        }else{\n          setMax(await roContract('getMax', [BigInt(tokenId)]) as string)\n        }\n      }\n    }\n    load()\n  }, [tokenId, roContract, perUser])\n  \n  const save = useCallback(async (evt: FormEvent) => {\n    evt.preventDefault()\n\n    if(!rwContract) {\n      throw new Error('`rwContract` is not defined')\n    }\n    try {\n      setProcessing(true)\n      let hash\n      if(perUser){\n        hash = await rwContract(\n          'setPerUserMax', [tokenId, max]\n        ) as '0x{string}'\n      } else {\n        hash = await rwContract(\n          'setMax', [tokenId, max]\n        ) as '0x{string}'\n      }\n      await contractClient.waitForTransactionReceipt({ hash })\n    } catch(error) {\n      toast(extractMessage(error))\n    } finally {\n      setProcessing(false)\n    }\n  }, [contractClient, max, perUser, rwContract, tokenId])\n\n  return (\n    <form onSubmit={save} {...props}>\n      <label>\n        <h3>{perUser && 'Per User'} Maximum Mintable</h3>\n        {max == null ? (\n          <div>\n            <BarLoader color=\"#2768ff\"/>\n            <p>Loading…</p>\n          </div>\n        ) : (\n          <input\n            type=\"number\"\n            value={max}\n            onChange={({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n              setMax(value.trim().replace(/^0+([^0])/, '$1'))\n            }}\n          />\n        )}\n      </label>\n      <SubmitButton\n        label={`Set ${perUser ? 'Per User': ''} Max`}\n        disabled={!/^-?\\d+$/.test(max)}\n        requireStorage={false}\n        short={true}\n        className=\"full\"\n        {...{ purpose, processing }}\n      />\n    </form>\n  )\n}\n"],"names":["BasicColors","__assign","this","__rest","React.createElement","useState","useCallback","metadata","name","toast","JSON5","useMemo","createPortal","value","useRef","useEffect","type","Markdown"],"mappings":"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","x_google_ignoreList":[0,1,2]}