{"version":3,"file":"home-969263c5.js","sources":["../../src/lib/types.ts","../../src/components/TokensTable.tsx","../../src/components/TokenFilterForm.tsx","../../src/pages/home.tsx"],"sourcesContent":["import { ExternalProvider } from '@ethersproject/providers'\n\nexport type Maybe<T> = T | null\nexport type Values<T> = T[keyof T]\nexport type Optional<T> = T | undefined\n\n// declare global {\n//   interface Window {\n//     ethereum: ExternalProvider\n//   }\n// }\n\nexport type NetworkInfo = {\n  [chainName: string]: {\n    chainId: number;\n    name: string;\n    label: string;\n    currency: string;\n    explorerUrl: Maybe<string>;\n    rpcUrl: string;\n  }\n}\n\nexport type OpenSeaAttribute = {\n  trait_type?: string\n  value?: string | number\n  display_type?: string\n}\n\nexport type Attribute = {\n  name?: string\n  value?: string | number\n  type?: string\n}\n\nexport type ERC1155Metadata = {\n  name?: string\n  description?: string\n  decimals?: number\n  attributes?: Array<Attribute>\n  properties?: { wearables?: Record<string, string> }\n  external_url?: string\n  image?: string | File\n  animation_url?: string | File\n  background_color?: string\n\n} & {\n  [key: string]: string | number\n}\n\nexport type CodedError = Error & { code: number }\n\nexport type TokenState = {\n  id?: string\n  hidable?: boolean\n  is?: Record<string, unknown>\n  gates?: Maybe<number>\n  index?: number\n  uri?: string\n  metadata?: ERC1155Metadata\n  total?: number\n  max?: number\n  error?: string\n}\n\nexport type MetaMaskError = Error & {\n  data: {\n    code: number\n    data: string\n    message: string\n  }\n}\n\nexport type NestedError = {\n  error: Error\n}\n\nexport type NamedString = {\n  name: string\n  content: string\n}\n\nexport type Fileish = (\n  File | string | NamedString\n)\n\nexport type FileListish = (\n  Fileish | Array<File | string>\n)\n\nexport type FormValues = {\n  name?: string\n  description?: string\n  homepage?: string\n  image?: Fileish\n  color?: string\n  animation?: Fileish\n  attributes?: Array<Attribute>\n  uri?: string\n  json5?: string\n  maximum?: number\n}\n\nexport type Limits = {\n  high?: number\n  low?: number\n}\n\nexport type SpanList = Array<number | Limits>\n\nexport class HiddenError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = 'HiddenError'\n  }\n}\n\nexport type Styles = (\n  Record<string, string>\n  & ((...names: string[]) => string)\n)","/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable @next/next/no-img-element */\nimport Tippy from '@tippyjs/react'\nimport { extractMessage, httpURL, regexify } from '@/lib/helpers'\nimport type { TokenState } from '@/lib/types'\nimport Markdown from 'react-markdown'\nimport React from 'react'\nimport { ClimbingBoxLoader } from 'react-spinners'\nimport { Link } from 'react-router-dom'\nimport '../styles/TokensTable.css'\n\ntype IndexedToken = { token: TokenState, index: number }\ntype Token = { token: TokenState }\n\nconst Index:React.FC<IndexedToken> = ({ token }) => (\n  <div className=\"index\">\n    <Tippy\n      content={token.id != null ? (\n        regexify(token.id)\n      ) : (\n        'ùöÑùöóùöîùöóùöòùö†ùöó'\n      )}\n    >\n      <p className=\"content\">\n        <span>{token.index}</span>\n        {token.gates != null && (\n          <span title={`Controls Token #${token.gates}`}>\n            ({token.gates === 0 ? 'all' : token.gates})\n          </span>\n        )}\n        {token.is?.disabling && (\n          <span>(disabled)</span>\n        )}\n      </p>\n    </Tippy>\n  </div>\n)\n\nconst Error:React.FC<Token> = ({ token }) => (\n  <div className=\"error\">\n    <p className=\"content\">{extractMessage(token.error)}</p>\n  </div>\n)\n\nconst Loading:React.FC<{ label?: string }> = (\n  ({ label = 'Loading Metadata‚Ä¶', ...props }) => (\n    <div className=\"loading\">\n      <p className=\"content\" {...props}>{label}</p>\n    </div>\n  )\n)\n\nconst Finding:React.FC<{ label?: string }> = (\n  ({ label = 'Finding Metadata‚Ä¶', ...props }) => (\n    <div className=\"finding\">\n      <p className=\"content\" {...props}>{label}</p>\n    </div>\n  )\n)\n\ndeclare module 'csstype' {\n  interface Properties {\n    '--img-bg'?: string\n  }\n}\n\nconst Image:React.FC<Token> = ({ token }) => (\n  <div className=\"img\" style={{ '--img-bg': `#${token.metadata.background_color}` }}>\n    <Link to={`/view/${regexify(token.id)}`} className=\"content\">\n      {token.metadata?.image && (\n        <img\n          src={httpURL(token.metadata.image as string) ?? undefined}\n          alt={token.metadata?.name ?? 'Untitled'}\n        />\n      )}\n    </Link>\n  </div>\n)\n\nconst Description:React.FC<Token> = ({ token }) => (\n  <div className=\"text\">\n    <div className=\"title\">\n      <h2 className=\"content\">\n        {token.metadata?.name ?? (\n          <em>Untitled</em>\n        )}\n        {token.gates == null ? '' : (\n          token.gates === 0 ? (\n            ' for all tokens'\n          ) : (\n            <>\n              {' '}for{' '}\n              <Link to={`/view/${token.gates}`}>\n                #{token.gates}\n              </Link>\n            </>\n          )\n        )}\n      </h2>\n    </div>\n    <div className=\"desc\">\n      {token.is?.disabling && (\n        <p className=\"content\">\n          This token <b>disables</b> the following permission for{' '}\n          <Link to={`/view/i:${token.gates}`}>\n            the token at index #{token.gates}\n          </Link>:\n        </p>\n      )}\n      {token.is?.gating && (\n        <p className=\"content\">\n          This token gives holders the following permission for{' '}\n          {token.gates === 0 ? (\n            'all tokens'\n          ) : (\n            <Link to={`/view/${token.gates}`}>\n              the token at index #{token.gates}\n            </Link>\n          )}:\n        </p>\n      )}\n      <Markdown linkTarget=\"_blank\" className=\"content\">\n        {token.is?.disabling || token.is?.gating ? (\n          `> ${token.metadata.description.replace(/\\n/g, \"\\n> \")}`\n        ) : (\n          token.metadata?.description ?? (\n            '*No Description*'\n          )\n        )}\n      </Markdown>\n    </div>\n  </div>\n)\n\nconst LinkLink:React.FC<Token> = ({ token }) => (\n  <div className=\"homepage\">\n    {token.metadata?.external_url && (\n      <Tippy content={token.metadata.external_url}>\n        <a\n          className=\"content\"\n          href={token.metadata.external_url}\n          target=\"_blank\" rel=\"noreferrer\"\n        >\n          üåê\n        </a>\n      </Tippy>\n    )}\n  </div>\n)\n\nconst URI:React.FC<Token> = ({ token }) => (\n  (token.uri && (\n    <nav className=\"metainfo\">\n      <ul>\n        <li className=\"source\">\n          <Tippy content={token.uri}>\n            <a\n              className=\"content\"\n              href={httpURL(token.uri) ?? undefined}\n              target=\"_blank\" rel=\"noreferrer\"\n            >\n              üîó\n            </a>\n          </Tippy>  \n        </li>\n        <li className=\"clipboard\">\n          <Tippy content=\"Copy to Clipboard\">\n            <button\n              className=\"content\"\n              onClick={() => {\n                if(token.uri && window.isSecureContext) {\n                  navigator?.clipboard?.writeText(token.uri)\n                }\n              }}\n            >\n              üìã\n            </button>\n          </Tippy>\n        </li>\n      </ul>\n    </nav>\n  ))\n)\n\nconst Total:React.FC<Token> = ({ token }) => {\n  const label = `${token.total?.toString()} minted of ${token.max?.toString()} total`\n\n  return (\n    <div className=\"quantity\">\n      <Link to={`/owners/${regexify(token.id)}`} className=\"content\">\n        <Tippy content={label}><>\n          <sup>{\n            token.total?.toString()\n            ?? <ClimbingBoxLoader size={4} color=\"#FE0235\"/>\n          }</sup>\n          {'‚ÅÑ'}\n          <sub>{\n            Number(token.max) < 0 ? '‚àû' : token.max?.toString()\n            ?? <ClimbingBoxLoader size={4} color=\"#EF2299\"/>\n          }</sub>\n        </></Tippy>\n      </Link>\n    </div>\n  )\n}\n\nconst Actions:React.FC<Token> = ({ token }) => {\n  const id = regexify(token.id)\n\n  return (\n    <nav className=\"actions\">\n      <ul>\n        <li className=\"edit\">\n          <Tippy content=\"Edit Metadata\">\n            <Link to={`/edit/${id}`} className=\"content\">\n              ‚úèÔ∏è\n            </Link>\n          </Tippy>\n        </li>\n        <li className=\"view\">\n          <Tippy content=\"View This NFT\">\n            <Link to={`/view/${id}`} className=\"content\">\n              üëÅ\n            </Link>\n          </Tippy>\n        </li>\n        <li className=\"disburse\">\n          <Tippy content=\"Disburse This NFT\">\n            <Link to={`/disburse/${id}`} className=\"content\">\n              üí∏\n            </Link>\n          </Tippy>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport const TokensTable: React.FC<{\n  tokens: Array<TokenState | Error>\n}> = ({ tokens }) => (\n  <section id=\"tokens\">\n    {tokens.map((token: TokenState, index) => {\n      if(token.is?.hidden) {\n        return null\n      }\n      return (\n        <article className=\"token\" key={index}>\n          <Index {...{ token, index }}/>\n          {(() => {\n            if(token.error) {\n              return <Error {...{ token }}/>\n            }\n            if(!token.metadata) {\n              return (\n                !token.uri ? (\n                  <Finding/>\n                ) : (\n                  <Loading/>\n                )\n              )\n            }\n            return (\n              <>\n                <Image {...{ token }}/>\n                <Description {...{ token }}/>\n                <LinkLink {...{ token }}/>\n              </>\n            )\n          })()}\n          <URI {...{ token }}/>\n          <Total {...{ token }}/>\n          <Actions {...{ token }}/>\n        </article>\n      )\n    })}\n  </section>\n)\n\nexport default TokensTable","import { toSpanList } from '@/lib/helpers'\nimport { Limits } from '@/lib/types'\nimport React, {\n  FormEventHandler, HTMLAttributes, SetStateAction, useEffect,\n} from 'react'\nimport { Controller, useForm } from 'react-hook-form'\nimport tffs from '../styles/TokenFilterForm.module.css'\n\nexport type FilterValues = {\n  limit: number\n  offset: number\n  visible: string\n  gatingVisible: boolean\n}\n\nexport const TokenFilterForm: React.FC<{\n  limit: number\n  setLimit: (limit: SetStateAction<number>) => void\n  offset: number\n  setOffset: (offset: SetStateAction<number>) => void\n  gatingVisible: boolean\n  setGatingVisible: (gatingVisible: SetStateAction<boolean>) => void\n  setVisibleList: (visible: SetStateAction<Array<number | Limits>>) => (\n    void\n  )\n  visibleList: Array<number | Limits> \n} & HTMLAttributes<HTMLFormElement>> = ({\n  limit = 10, setLimit, offset = 0, setOffset,\n  gatingVisible = false, setGatingVisible,\n  visibleList, setVisibleList, ...props\n}) => {\n  const {\n    register, handleSubmit, control, setValue,\n  } = useForm<FilterValues>()\n  useEffect(() => {\n    setValue('limit', limit)\n    setValue('offset', offset)\n    setValue('visible', visibleList.toString())\n    setValue('gatingVisible', gatingVisible)\n  }, [limit, offset, visibleList, gatingVisible, setValue])\n\n  const submit = async (data: FilterValues) => {\n    setLimit(Number(data.limit))\n    setOffset(Number(data.offset))\n    setGatingVisible(data.gatingVisible)\n    setVisibleList(toSpanList(data.visible))\n  }\n\n  return (\n    <section>\n      <form\n        onSubmit={handleSubmit(submit) as FormEventHandler}\n        id={tffs.form}\n        {...props}\n      >\n        <fieldset>\n          <legend>Offset</legend>\n          <input\n            type=\"number\"\n            placeholder=\"Size of the offset.\"\n            {...register('offset')}\n          />\n        </fieldset>\n        <fieldset>\n          <legend>Limit</legend>\n          <input\n            type=\"number\"\n            placeholder=\"Number of tokens to display.\"\n            {...register('limit')}\n          />\n        </fieldset>\n        <span className=\"sep\">or</span>\n        <fieldset>\n          <legend>Visible&#xA0;List</legend>\n\n          <input\n            placeholder=\"Comma, space and dash separated list of indices.\"\n            {...register('visible')}\n          />\n        </fieldset>\n        <Controller\n          {...{ control }}\n          name=\"gatingVisible\"\n          defaultValue={gatingVisible}\n          render={({ field: { onChange, value: checked, ref } }) => (\n            <label id=\"perms\">\n              <input\n                type=\"checkbox\"\n                {...{ checked, onChange, ref }}\n              />\n              <span>Show Permission Tokens</span>\n            </label>\n          )}\n        />\n\n        <button>View</button>\n      </form>\n    </section>\n  )\n}\n\nexport default TokenFilterForm\n","import React, {\n  useState, useEffect, useCallback, useRef,\n} from 'react'\nimport {\n  extractMessage, httpURL, toSpanList,\n} from '@/lib/helpers'\nimport {\n  HiddenError, Limits, Maybe, TokenState,\n} from '@/lib/types'\nimport {\n  Header, TokenFilterForm, TokensTable,\n} from '@/components'\nimport { useWeb3 } from '@/lib/hooks'\nimport { Helmet } from 'react-helmet'\nimport {\n  useSearchParams, useNavigate, createSearchParams,\n} from 'react-router-dom'\nimport JSON5 from 'json5'\nimport { defaults } from '@/config'\nimport '../styles/home.css'\n\nconst Home = () => {\n  const [tokens, setTokens] = useState<Array<TokenState | Error>>([])\n  const [query] = useSearchParams()\n  const [limit, setLimit] = useState(Number(query.get('limit') ?? defaults.limit))\n  const [offset, setOffset] = useState(Number(query.get('offset') ?? defaults.offset))\n  const [gatingVisible, setGatingVisible] = (\n    useState(query.get('gating') === 'true')\n  )\n  const visible = query.get('visible') ?? defaults.visible\n  const [visibleList, setVisibleList] = (\n    useState<Array<number | Limits>>(toSpanList(visible))\n  )\n  const navigate = useNavigate()\n  const { roContract, bitsLibrary } = useWeb3()\n\n  const setToken = useCallback(\n    (idx: number, info: Record<string, unknown>) => {\n      let token\n\n      setTokens((tkns: Array<TokenState>) => {\n        token = { ...tkns[idx], ...info }\n        return ([\n          ...tkns.slice(0, idx),\n          ...Array.from({ length: idx - tkns.length }, () => ({})),\n          token,\n          ...tkns.slice(idx + 1),\n        ])\n      })\n      return token\n    },\n    [setTokens],\n  )\n  const [typeCount, setTypeCount] = useState(null)\n  const [GATING_TYPE, setGATING_TYPE] = useState<Maybe<bigint>>(null)\n  const [DISABLING_TYPE, setDISABLING_TYPE] = useState<Maybe<bigint>>(null)\n  const [TYPE_WIDTH, setTYPE_WIDTH] = useState<Maybe<number>>(null)\n  const [TYPE_BOUNDARY, setTYPE_BOUNDARY] = (\n    useState<Maybe<number>>(null)\n  )\n\n  useEffect(() => {\n    const params = {}\n    if(visibleList?.length > 0) {\n      Object.assign(params, {\n        visible: visibleList.toString(),\n      })\n     } else {\n      Object.entries({ limit, offset, gating: gatingVisible }).forEach(\n        ([key, val]) => {\n          if(val !== defaults[key as keyof typeof defaults]) {\n            Object.assign(params, { [key]: val.toString() })\n          }\n        }\n      )\n    }\n\n    const options = { search: `?${createSearchParams(params)}` }\n    navigate(options, { replace: true })\n  }, [visibleList, limit, offset, gatingVisible, navigate])\n\n  useEffect(() => {\n    if(roContract && bitsLibrary) {\n      roContract.typeSupply()\n      .then((supply: {\n        toBigInt: () => bigint // call-bind?\n      }) => supply.toBigInt())\n      .then(setTypeCount)\n      bitsLibrary.GATING_TYPE()\n      .then((type: { toBigInt: () => bigint }) => type.toBigInt())\n      .then(setGATING_TYPE)\n      bitsLibrary.DISABLING_TYPE()\n      .then((type: { toBigInt: () => bigint }) => type.toBigInt())\n      .then(setDISABLING_TYPE)\n      bitsLibrary.TYPE_WIDTH()\n      .then(setTYPE_WIDTH)\n      bitsLibrary.TYPE_BOUNDARY()\n      .then(setTYPE_BOUNDARY)\n    }\n  }, [roContract, bitsLibrary])\n\n  useEffect(() => {\n    setVisibleList(toSpanList(visible))\n  }, [visible])\n\n  const controller = useRef(null)\n  const retrieve = useCallback(\n    async (tokens: Array<TokenState>) => {\n      controller.current?.abort()\n      controller.current = new AbortController()\n      setTokens([])\n      return (\n        await Promise.allSettled(\n          tokens.map(async (token, idx) => {\n            try {\n              const id: bigint = token.id ?? (\n                (await roContract.tokenByIndex(token.index)).toBigInt()\n              )\n\n              const type = (\n                id\n                & (\n                  (2n**BigInt(TYPE_WIDTH) - 1n) // TYPE_WIDTH 1s\n                  << BigInt(TYPE_BOUNDARY)\n                )\n              )\n              const gating = token.is?.gating ?? (\n                type === GATING_TYPE\n              )\n              const disabling = token.is?.disabling ?? (\n                type === (GATING_TYPE | DISABLING_TYPE)\n              )\n              const gates = token.gates ?? (gating || disabling ? (\n                Number((2n**32n - 1n) & id)\n              ) : ( null ))\n\n              const is: { [key: string]: unknown } = {\n                gating,\n                disabling,\n                hidden: (\n                  token.hidable != false\n                  && (gating || disabling)\n                  && !gatingVisible\n                ),\n              }\n\n              setToken(\n                idx,\n                {\n                  id: `0x${id.toString(16)}`,\n                  index: token.index,\n                  gates,\n                  is,\n                }\n              )\n\n              if(is.hidden) {\n                throw new HiddenError('Token is hidden.')\n              }\n\n              const responses = await Promise.allSettled([\n                (async () => {\n                  const uri = token.uri ?? await roContract.uri(id)\n                  if(uri === '') {\n                    throw new Error('No URI‚Ä¶ Waiting for configuration‚Ä¶')\n                  }\n                  setToken(idx, { uri })\n                  const response = await fetch(\n                    httpURL(uri)!,\n                    { signal: controller.current.signal }\n                  )\n                  if(!response.ok) {\n                    throw new Error(`Request Status: ${response.status}`)\n                  }\n                  let body\n                  try {\n                    body = await response.text()\n                    setToken(idx, { metadata: JSON5.parse(body) })\n                  } catch(error) {\n                    console.debug({ error, body })\n                  }\n                })(),\n                (async () => {\n                  const supply = await roContract.totalSupply(id)\n                  setToken(idx, { total: supply.toBigInt() })\n                })(),\n                (async () => {\n                  const max = await roContract.getMax(id)\n                  setToken(idx, { max: max.toBigInt() })\n                })(),\n              ])\n\n              const [{ reason: error } = { reason: null }] = (\n                responses.filter((res) => (\n                  res.status === 'rejected'\n                )) as Array<{ reason: string }>\n              )\n              if(error) throw new Error(error)\n            } catch(error) {\n              if(!(error instanceof HiddenError)) {\n                console.error({ error })\n              }\n              if(!(error instanceof DOMException)) { // !aborted\n                return setToken(idx, {\n                  error: extractMessage(error)\n                })\n              }\n            }\n          })\n        )\n      )\n    },\n    [\n      GATING_TYPE, TYPE_BOUNDARY, TYPE_WIDTH, DISABLING_TYPE,\n      gatingVisible, roContract, setToken,\n    ],\n  )\n\n  useEffect(() => {\n    const load = async () => {\n      if(\n        roContract && bitsLibrary && typeCount != null\n        && TYPE_WIDTH != null && TYPE_BOUNDARY != null\n        && GATING_TYPE != null && DISABLING_TYPE != null\n      ) {\n        const tokens: Array<TokenState> = []\n        if(visibleList.some(() => true)) {\n          visibleList.forEach(\n            (elem) => {\n              let { high, low } = elem as Limits\n              const sorted = [low, high] = (\n                [low, high].sort((a, b) => (a - b))\n              )\n              if(sorted.some((elem) => elem == null)) {\n                [high, low] = [elem as number, elem as number]\n              }\n              tokens.push(...(\n                Array.from({ length: high - low + 1 })\n                .map((_, idx) => ({\n                  index: low + idx,\n                  hidable: false,\n                }))\n              ))\n            }\n          )\n        } else {\n          const start = offset < 0 ? Number(typeCount) + offset : offset\n          const count = Math.min(limit, Number(typeCount) - start)\n          tokens.push(\n            ...(\n              Array.from({ length: count })\n              .map((_, idx) => ({\n                index: start + idx + 1,\n              }))\n            )\n          )\n        }\n\n        await retrieve(tokens)\n      }\n    }\n    load()\n  }, [\n    visibleList, retrieve, roContract, bitsLibrary,\n    limit, offset, typeCount,\n    TYPE_WIDTH, TYPE_BOUNDARY, GATING_TYPE, DISABLING_TYPE,\n  ])\n\n  return (\n    <>\n      <Helmet>\n        <title>ùîêùî¢ùî±ùîûùîäùîûùî™ùî¢‚Äôùî∞ ‚Äôùòæùôùùôûùôöùô´ùôöùô¢ùôûùô£ùô©ùô®</title>\n        <meta \n          name=\"description\"\n          content=\"MetaGame‚Äôs ‚ÄôChievemint NFTs\"\n        />\n      </Helmet>\n\n      <Header/>\n\n      <main>\n        <TokenFilterForm\n          {...{\n            limit, setLimit,\n            offset, setOffset,\n            gatingVisible, setGatingVisible,\n            visibleList, setVisibleList,\n          }}\n        />\n        <TokensTable {...{ tokens }}/>\n      </main>\n      <footer>\n        <button\n          onClick={() => {\n            if(visibleList.length > 0) {\n              const potentials = visibleList.map(\n                (entry) => ((entry as Limits)?.high ?? entry) as number\n              )\n              const max = Math.max(...potentials)\n              setVisibleList((vis) => (\n                [...vis, { low: max, high: max + 10 }]\n              ))\n            } else {\n              setLimit((lim) => lim + 10)\n            }\n          }}\n        >\n          <span className=\"bigNBold\">+</span>10\n        </button>\n        <button\n          onClick={() => setOffset((off) => off + limit)}\n        >\n          <span className=\"biggerNBold\">‚Üì</span>{limit}\n        </button>\n        <button\n          onClick={() => setOffset((off) => off - limit)}\n        >\n          <span className=\"biggerNBold\">‚Üë</span>{limit}\n        </button>\n      </footer>\n    </>\n  )\n}\n\nexport default Home"],"names":["Error","Markdown","useEffect","useState","useCallback","useRef","tokens","JSON5","error","elem","Helmet"],"mappings":"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"}